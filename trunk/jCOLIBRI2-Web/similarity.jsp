<%@ page import="jcolibri.casebase.*" %><%@ page import="jcolibri.cbrcore.*" %><%@ page import="jcolibri.connector.*" %><%@ page import="jcolibri.test.test4.*" %><%@ page import="jcolibri.method.retrieve.*" %><%@ page import="jcolibri.method.retrieve.KNNretrieval.*" %><%@ page import="jcolibri.method.retrieve.KNNretrieval.similarity.global.*" %><%@ page import="jcolibri.method.retrieve.KNNretrieval.similarity.local.*" %><%@ page import="java.util.*" %><html><head></head><body><table border="0" cellpadding="2" cellspacing="7" width="100%">  <tr>  <td>	<a href="http://gaia.fdi.ucm.es"><img src="img/gaia.gif" border="0"></a>  </td>  <td colspan="2" valign="middle" bgcolor="#738EAB">    <font size="-1">       <h1><font face="arial" color="#ffffff"> GAIA - Group for Artificial Intelligence Applications</font></h1>	</font>	<hr color="White">  </td>  </tr></table><p><form action="index.html" method="post"><input type="submit" value="Back"></form></p><%		String holidayTypeW  	= request.getParameter("holidaytypeW");		String numberOfPersonsW = request.getParameter("numberofpersonsW");		String transportationW	= request.getParameter("transportationW");		String durationW		= request.getParameter("durationW");		String seasonW			= request.getParameter("seasonW");		String accomodationW	= request.getParameter("accomodationW");		String regioncompW		= request.getParameter("regioncompW");		String regionW			= request.getParameter("regionW");		String cityW			= request.getParameter("cityW");		String airportW			= request.getParameter("airportW");		String currencyW		= request.getParameter("currencyW");				KNNConfig simConfig = new KNNConfig();				simConfig.setDescriptionSimFunction(new Average());		Attribute at1 = new Attribute("HolidayType", TravelDescription.class);		simConfig.addMapping(at1, new Equal());		simConfig.setWeight(at1, Double.parseDouble(holidayTypeW)/100);						Attribute at3 = new Attribute("NumberOfPersons", TravelDescription.class);		simConfig.addMapping(at3, new Equal());		simConfig.setWeight(at3, Double.parseDouble(numberOfPersonsW)/100);		Attribute at5 = new Attribute("Transportation", TravelDescription.class);		simConfig.addMapping(at5, new Equal());		simConfig.setWeight(at5, Double.parseDouble(transportationW)/100);		Attribute at6 = new Attribute("Duration", TravelDescription.class);		simConfig.addMapping(at6, new Interval(31));		simConfig.setWeight(at6, Double.parseDouble(durationW)/100);		Attribute at7 = new Attribute("Season", TravelDescription.class);		simConfig.addMapping(at7, new Equal());				simConfig.setWeight(at7, Double.parseDouble(seasonW)/100);		Attribute at8 = new Attribute("Accommodation", TravelDescription.class);		simConfig.addMapping(at8, new Equal());		simConfig.setWeight(at8, Double.parseDouble(accomodationW)/100);		Attribute at9 = new Attribute("Region", TravelDescription.class); 		simConfig.addMapping(at9, new Average());		simConfig.setWeight(at9, Double.parseDouble(regioncompW)/100);		Attribute at10 = new Attribute("region", Region.class);		simConfig.addMapping(at10, new Equal());		simConfig.setWeight(at10, Double.parseDouble(regionW)/100);		Attribute at11 = new Attribute("city", Region.class);		simConfig.addMapping(at11, new Equal());		simConfig.setWeight(at11, Double.parseDouble(cityW)/100);		Attribute at12 = new Attribute("airport", Region.class);		simConfig.addMapping(at12, new Equal());		simConfig.setWeight(at12, Double.parseDouble(airportW)/100);		Attribute at13 = new Attribute("currency", Region.class);		simConfig.addMapping(at13, new Equal());		simConfig.setWeight(at13, Double.parseDouble(currencyW)/100);		String number = request.getParameter("k");		Integer k = new Integer(number);		simConfig.setK(k);		CBRCaseBase _caseBase = (CBRCaseBase)getServletContext().getAttribute("casebase");		CBRQuery _query =  (CBRQuery)getServletContext().getAttribute("query");		if(_caseBase==null)			out.println("case base is null");		else if(_query ==null)			out.println("query is null");		else		{			Collection<RetrievalResult> eval = KNNretrievalMethod.evaluateSimilarity(_caseBase.getCases(), _query, simConfig);								out.println("Most similar cases with: "+_query);			out.println("<p><table border=\"1\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">");							out.println("<tr><td><b>Similarity</b></td><td><b>Case</b></td></tr>");			for(RetrievalResult nse: eval)				out.println("<tr><td>"+nse.getEval()+"</td><td>"+nse.get_case()+"</td></tr>");			out.println("</table>");						Collection<CBRCase> selectedcases = RemoveRetrievalEvaluation.removeRetrievalEvaluation(eval);						getServletContext().setAttribute("NumericSimEval", eval);				getServletContext().setAttribute("selectedcases", selectedcases);			}%><p><form action="index.html" method="post"><input type="submit" value="Back"></form></p><hr><h3>Source Code</h3><pre>		String holidayTypeW     = request.getParameter("holidaytypeW");		String numberOfPersonsW = request.getParameter("numberofpersonsW");		String transportationW  = request.getParameter("transportationW");		String durationW        = request.getParameter("durationW");		String seasonW          = request.getParameter("seasonW");		String accomodationW    = request.getParameter("accomodationW");		String regioncompW      = request.getParameter("regioncompW");		String regionW          = request.getParameter("regionW");		String cityW            = request.getParameter("cityW");		String airportW         = request.getParameter("airportW");		String currencyW        = request.getParameter("currencyW");				NumericSimConfig simConfig = new NumericSimConfig();				simConfig.setDescriptionSimFunction(new Average());		Attribute at1 = new Attribute("HolidayType", TravelDescription.class);		simConfig.addMapping(at1, new Equal());		simConfig.setWeight(at1, Double.parseDouble(holidayTypeW)/100);						Attribute at3 = new Attribute("NumberOfPersons", TravelDescription.class);		simConfig.addMapping(at3, new Equal());		simConfig.setWeight(at3, Double.parseDouble(numberOfPersonsW)/100);		Attribute at5 = new Attribute("Transportation", TravelDescription.class);		simConfig.addMapping(at5, new Equal());		simConfig.setWeight(at5, Double.parseDouble(transportationW)/100);		Attribute at6 = new Attribute("Duration", TravelDescription.class);		simConfig.addMapping(at6, new Interval(31));		simConfig.setWeight(at6, Double.parseDouble(durationW)/100);		Attribute at7 = new Attribute("Season", TravelDescription.class);		simConfig.addMapping(at7, new Equal());				simConfig.setWeight(at7, Double.parseDouble(seasonW)/100);		Attribute at8 = new Attribute("Accommodation", TravelDescription.class);		simConfig.addMapping(at8, new Equal());		simConfig.setWeight(at8, Double.parseDouble(accomodationW)/100);		Attribute at9 = new Attribute("Region", TravelDescription.class); 		simConfig.addMapping(at9, new Average());		simConfig.setWeight(at9, Double.parseDouble(regioncompW)/100);		Attribute at10 = new Attribute("region", Region.class);		simConfig.addMapping(at10, new Equal());		simConfig.setWeight(at10, Double.parseDouble(regionW)/100);		Attribute at11 = new Attribute("city", Region.class);		simConfig.addMapping(at11, new Equal());		simConfig.setWeight(at11, Double.parseDouble(cityW)/100);		Attribute at12 = new Attribute("airport", Region.class);		simConfig.addMapping(at12, new Equal());		simConfig.setWeight(at12, Double.parseDouble(airportW)/100);		Attribute at13 = new Attribute("currency", Region.class);		simConfig.addMapping(at13, new Equal());		simConfig.setWeight(at13, Double.parseDouble(currencyW)/100);		String number = request.getParameter("k");		Integer k = new Integer(number);		simConfig.setK(k);		CBRCaseBase _caseBase = (CBRCaseBase)getServletContext().getAttribute("casebase");		CBRQuery _query =  (CBRQuery)getServletContext().getAttribute("query");		if(_caseBase==null)			out.println("case base is null");		else if(_query ==null)			out.println("query is null");		else		{			Collection<RetrievalResult> eval = KNNretrievalMethod.evaluateSimilarity(_caseBase.getCases(), _query, simConfig);								out.println("Most similar cases with: "+_query);			out.println("<p><table border=\"1\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">");							out.println("<tr><td><b>Similarity</b></td><td><b>Case</b></td></tr>");			for(RetrievalResult nse: eval)				out.println("<tr><td>"+nse.getEval()+"</td><td>"+nse.get_case()+"</td></tr>");			out.println("</table>");						Collection<CBRCase> selectedcases = RemoveRetrievalEvaluation.removeRetrievalEvaluation(eval);						getServletContext().setAttribute("NumericSimEval", eval);				getServletContext().setAttribute("selectedcases", selectedcases);			}</pre></body></html>